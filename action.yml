name: 'RP2040 Build pipeline'
description: 'Build the current application for Raspberry Pi Pico, then upload artifact to actions store.'

inputs:
  pimoroni-pico:
    description: 'Use the library pimoroni-pico in addition to the Official SDK.'
    required: false
    default: 'true'
  pimoroni-pico-vendor:
    description: 'Use a custom fork of pimoroni-pico (like `thinkier`)'
    required: false
    default: 'pimoroni'

runs:
  using: composite
  steps:
    # Download cross-compile deps from system package manager
    - name: Fetch build dependencies
      shell: bash
      run: sudo apt-get update; sudo apt-get install --yes python3 git cmake gcc-arm-none-eabi libnewlib-arm-none-eabi build-essential libstdc++-arm-none-eabi-newlib; sudo rm -rf /var/apt/cache
    # Download Official SDK
    - name: Clone Official SDK
      working-directory: ..
      shell: bash
      run: git clone https://github.com/raspberrypi/pico-sdk; cd pico-sdk; git submodule update --init --recursive
    # Download libraries - pimoroni-pico
    - name: Clone library - pimoroni-pico
      if: ${{ inputs.pimoroni-pico == 'true'}}
      working-directory: ..
      shell: bash
      run: git clone "https://github.com/${{ inputs.pimoroni-pico-vendor }}/pimoroni-pico"; cd pimoroni-pico; git submodule update --init --recursive
    # Build using cmake and make
    - name: Initialize build with CMake
      shell: bash
      env:
        PICO_SDK_PATH: ../pico-sdk
      run: cmake .
    - name: Build with Make
      shell: bash
      run: make
    # Upload to GitHub
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: UF2 Artifact
        path: '**/*.uf2'
